//539. Minimum Time Difference
/* Given a list of 24-hour clock time points in "HH:MM" format, return the minimum minutes difference between any two time-points in the list.
Example 1:
Input: timePoints = ["23:59","00:00"]
Output: 1
Example 2:
Input: timePoints = ["00:00","23:59","00:00"]
Output: 0
Constraints:
2 <= timePoints.length <= 2 * 104
timePoints[i] is in the format "HH:MM". */

class Solution {
public:
    int findMinDifference(vector<string>& timePoints) {
        vector<int> timeArr;
        string hourStr="", minutesStr="";
        int hour=0, minutes=0, totalTime=0;
        for(auto time : timePoints){
            hourStr = time.substr(0,2);
            minutesStr = time.substr(3,2);
            hour = stoi(hourStr);
            minutes = stoi(minutesStr);
            totalTime = ((hour*60)+minutes);
            timeArr.push_back(totalTime);
        }
        sort(timeArr.begin(), timeArr.end());
        int minDiff=1440;
        for(int i=1; i<timeArr.size(); i++){
            minDiff=min(minDiff, timeArr[i]-timeArr[i-1]);            
        }
        minDiff = min(minDiff, (1440-timeArr.back()+timeArr[0]));
        return minDiff;
    }
};

